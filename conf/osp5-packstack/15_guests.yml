# network aliases (see conf/openstack/10_networks.yml):
public_network: &public_network openstack-public
private_network: &private_network openstack-private

common:
  virtinst:
    os_variant: rhel7
    location: /var/lib/libvirt/images/rhel-server-7.0-x86_64-dvd.iso

guests:
  - name: allinone
    description: OpenStack All-in-One node

    setup_data:
      - src: data/openstack/Makefile
        dst: Makefile
      - src: data/openstack/allinone_answers.txt
        dst: answers.txt

    templates:
      autoinst:
        src: autoinstall.d/openstack-allinone-ks.cfg

    disks:
      - pool: default
        format: qcow2
        cache: none
        size: 70  # 50G (data) + 20 G (system)
        bus: scsi

    virtinst:
      cpu: host  # Needed to enable nested KVM feature

    guests:
      - hostname: allinone-0
        fqdn: allinone-0.openstack.example.com
        ip: &openstack_allinone_0_ip_0 192.168.200.10
        interfaces:
          # eth0: access from/to public network
          - mac: "52:54:00:16:82:10"
            ip: *openstack_allinone_0_ip_0
            network: *public_network

          # eth1: acccess from/to vms inside this node via bridges
          - mac: "52:54:00:16:82:11"
            ip: 192.168.200.11
            network: *public_network

        packstack:
          controller_ip: *openstack_allinone_0_ip_0
          compute_ips:
            - *openstack_allinone_0_ip_0

  - name: controller
    description: OpenStack controller node

    setup_data:
      - src: data/openstack/Makefile
        dst: Makefile
      - src: data/openstack/controller_answers.txt
        dst: answers.txt

    templates:
      autoinst:
        src: autoinstall.d/openstack-controller-ks.cfg

    guests:
      - hostname: controller-0
        fqdn: controller-0.openstack.example.com
        ip: &openstack_controller_0_ip_0 192.168.200.20
        interfaces:
          # eth0: access from/to public network for this openstack node:
          - mac: "52:54:00:16:82:20"
            ip: *openstack_controller_0_ip_0
            network: *public_network

          # eth1: guests access to public network via this (public side)
          - mac: "52:54:00:16:82:21"
            ip: 192.168.200.21
            network: *public_network

          # eth2: guests access to public network via this (private side)
          - mac: "52:54:00:68:32:20"
            ip: 192.168.32.20
            network: *private_network

        openstack_compute_nodes:
          - &openstack_compute_0_ip_0 192.168.200.31

        packstack:
          controller_ip: *openstack_controller_0_ip_0
          compute_ips:
            - *openstack_compute_0_ip_0

  - name: compute
    description: OpenStack Compute node

    templates:
      autoinst:
        src: autoinstall.d/openstack-compute-ks.cfg

    virtinst:
      cpu: host

    guests:
      - hostname: compute-0
        fqdn: compute-0.openstack.example.com
        ip: *openstack_compute_0_ip_0
        interfaces:
          # eth0: access from/to public network for this openstack node:
          - mac: "52:54:00:16:82:30"
            ip: *openstack_compute_0_ip_0
            network: *public_network

          # eth1: guests access to public network via this (private side)
          - mac: "52:54:00:68:32:30"
            ip: 192.168.32.30
            network: *private_network

# vim:sw=2:ts=2:et:
